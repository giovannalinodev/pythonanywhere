name: OWASP Dependency Check

on:
  schedule:
    - cron: '0 0 * * 0'  # Roda semanalmente aos domingos
  workflow_dispatch:  # Permite acionamento manual

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Configurar Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      
      - name: Instalar dependências Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'Python-Django-App'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --enableExperimental
            --scan requirements.txt
            --scan "**/*.py"
            --excludeTest
            --failOnCVSS 7
          
      - name: Verificar relatório gerado
        run: |
          echo "Listando arquivos no diretório reports"
          ls -la reports/
          
      - name: Mostrar resumo do relatório
        run: |
          echo "Resumo do relatório de vulnerabilidades:"
          if [ -f "reports/dependency-check-report.html" ]; then
            grep -A 5 "Vulnerabilities Found" reports/dependency-check-report.html || echo "Nenhuma vulnerabilidade encontrada ou padrão não encontrado"
          else
            echo "Arquivo de relatório não foi gerado"
          fi
          
      - name: Upload do relatório como artefato
        uses: actions/upload-artifact@v4

        with:
          name: dependency-check-report
          path: reports/
          retention-days: 7